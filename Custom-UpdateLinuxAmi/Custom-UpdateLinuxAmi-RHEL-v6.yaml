schemaVersion: "0.3"
description: "Updates AMI with Linux distribution packages and Amazon software. For details,see https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-awsdocs-linux.html"
assumeRole: "{{AutomationAssumeRole}}"
parameters:
  SourceAmiId:
    type: String
    description: "(Required) The source Amazon Machine Image ID."
  SubnetId:
    type: String
    description: "(Required) Specify the SubnetId if you want to launch EC2 instance in a specific subnet."
    default: ""
  IamInstanceProfileName:
    type: String
    description: "(Required) The instance profile that enables Systems Manager (SSM) to manage the instance."
    default: ManagedInstanceProfile
  AutomationAssumeRole:
    type: String
    description: "(Required) The ARN of the role that allows Automation to perform the actions on your behalf."
    default: "arn:aws:iam::{{global:ACCOUNT_ID}}:role/AutomationServiceRole"
  TargetAmiName:
    type: String
    description: "(Optional) The name of the new AMI that will be created. Default is a system-generated string including the source AMI id, and the creation time and date."
    default: "UpdateLinuxAmi_from_{{SourceAmiId}}_on_{{global:DATE_TIME}}"
  InstanceType:
    type: String
    description: "(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is c4.xlarge."
    default: "c4.xlarge"
  InstanceTypeForEnaSupport:
    type: String
    description: "(Optional) Type of instance to launch as the workspace host. Instance types vary by region. Default is r4.xlarge."
    default: "r4.xlarge"
  PreUpdateScript:
    type: String
    description: "(Optional) A script provided as a string. It will execute prior to installing OS updates."
    default: ""
  PostUpdateScript:
    type: String
    description: "(Optional) A script provided as a string. It will execute after installing OS updates."
    default: ""
  EnaScript:
    type: String
    description: "(Optional) A script provided as a string. It will execute prior to installing Linux Kernel module (ena)."
    default: ""
  IxgbevfScript:
    type: String
    description: "(Optional) A script provided as a string. It will execute prior to installing Linux Kernel module (ixgbevf)."
    default: ""
mainSteps:
  - name: LaunchInstance
    action: "aws:runInstances"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      ImageId: "{{ SourceAmiId }}"
      InstanceType: "{{ InstanceType }}"
      UserData: "IyEvYmluL2Jhc2gNCg0KZnVuY3Rpb24gZ2V0X2NvbnRlbnRzKCkgew0KICAgIGlmIFsgLXggIiQod2hpY2ggY3VybCkiIF07IHRoZW4NCiAgICAgICAgY3VybCAtcyAtZiAiJDEiDQogICAgZWxpZiBbIC14ICIkKHdoaWNoIHdnZXQpIiBdOyB0aGVuDQogICAgICAgIHdnZXQgIiQxIiAtTyAtDQogICAgZWxzZQ0KICAgICAgICBkaWUgIk5vIGRvd25sb2FkIHV0aWxpdHkgKGN1cmwsIHdnZXQpIg0KICAgIGZpDQp9DQoNCnJlYWRvbmx5IElERU5USVRZX1VSTD0iaHR0cDovLzE2OS4yNTQuMTY5LjI1NC8yMDE2LTA2LTMwL2R5bmFtaWMvaW5zdGFuY2UtaWRlbnRpdHkvZG9jdW1lbnQvIg0KcmVhZG9ubHkgVFJVRV9SRUdJT049JChnZXRfY29udGVudHMgIiRJREVOVElUWV9VUkwiIHwgYXdrIC1GXCIgJy9yZWdpb24vIHsgcHJpbnQgJDQgfScpDQpyZWFkb25seSBERUZBVUxUX1JFR0lPTj0idXMtZWFzdC0xIg0KcmVhZG9ubHkgUkVHSU9OPSIke1RSVUVfUkVHSU9OOi0kREVGQVVMVF9SRUdJT059Ig0KDQpyZWFkb25seSBTQ1JJUFRfTkFNRT0iYXdzLWluc3RhbGwtc3NtLWFnZW50Ig0KcmVhZG9ubHkgU0NSSVBUX1VSTD0iaHR0cHM6Ly9hd3Mtc3NtLWRvd25sb2Fkcy0kUkVHSU9OLnMzLmFtYXpvbmF3cy5jb20vc2NyaXB0cy8kU0NSSVBUX05BTUUiDQoNCmNkIC90bXANCkZJTEVfU0laRT0wDQpNQVhfUkVUUllfQ09VTlQ9Mw0KUkVUUllfQ09VTlQ9MA0KDQp3aGlsZSBbICRSRVRSWV9DT1VOVCAtbHQgJE1BWF9SRVRSWV9DT1VOVCBdIDsgZG8NCiAgZWNobyBBV1MtVXBkYXRlTGludXhBbWk6IERvd25sb2FkaW5nIHNjcmlwdCBmcm9tICRTQ1JJUFRfVVJMDQogIGdldF9jb250ZW50cyAiJFNDUklQVF9VUkwiID4gIiRTQ1JJUFRfTkFNRSINCiAgRklMRV9TSVpFPSQoZHUgLWsgL3RtcC8kU0NSSVBUX05BTUUgfCBjdXQgLWYxKQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmluaXNoZWQgZG93bmxvYWRpbmcgc2NyaXB0LCBzaXplOiAkRklMRV9TSVpFDQogIGlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogICAgYnJlYWsNCiAgZWxzZQ0KICAgIGlmIFtbICRSRVRSWV9DT1VOVCAtbHQgTUFYX1JFVFJZX0NPVU5UIF1dOyB0aGVuDQogICAgICBSRVRSWV9DT1VOVD0kKChSRVRSWV9DT1VOVCsxKSk7DQogICAgICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogRmlsZVNpemUgaXMgMCwgcmV0cnlDb3VudDogJFJFVFJZX0NPVU5UDQogICAgZmkNCiAgZmkgDQpkb25lDQoNCmlmIFsgJEZJTEVfU0laRSAtZ3QgMCBdOyB0aGVuDQogIGNobW9kICt4ICIkU0NSSVBUX05BTUUiDQogIGVjaG8gQVdTLVVwZGF0ZUxpbnV4QW1pOiBSdW5uaW5nIFVwZGF0ZVNTTUFnZW50IHNjcmlwdCBub3cgLi4uLg0KICAuLyIkU0NSSVBUX05BTUUiIC0tcmVnaW9uICIkUkVHSU9OIg0KZWxzZQ0KICBlY2hvIEFXUy1VcGRhdGVMaW51eEFtaTogVW5hYmxlIHRvIGRvd25sb2FkIHNjcmlwdCwgcXVpdHRpbmcgLi4uLg0KZmkNCg=="
      MinInstanceCount: 1
      MaxInstanceCount: 1
      IamInstanceProfileName: "{{ IamInstanceProfileName }}"
      SubnetId: "{{ SubnetId }}"
  - name: AssertInstanceIsManagedInstance
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
      PropertySelector: "$.InstanceInformationList[0].PingStatus"
      DesiredValues:
        - Online
  - name: DescribeManagedInstanceForInstanceId
    action: "aws:executeAwsApi"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
    outputs:
      - Name: InstanceId
        Selector: "$.InstanceInformationList[0].InstanceId"
  - name: DescribeManagedInstanceForPlatformType
    action: "aws:executeAwsApi"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
    outputs:
      - Name: PlatformType
        Selector: "$.InstanceInformationList[0].PlatformType"
  - name: DescribeManagedInstanceForPlatformName
    action: "aws:executeAwsApi"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
    outputs:
      - Name: PlatformName
        Selector: "$.InstanceInformationList[0].PlatformName"
  - name: DescribeManagedInstanceForPlatformVersion
    action: "aws:executeAwsApi"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
    outputs:
      - Name: PlatformVersion
        Selector: "$.InstanceInformationList[0].PlatformVersion"
  - name: GetLinuxKernelInformationBeforeUpdate
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
  - name: RunPreUpdateScript
    action: "aws:runCommand"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 3600
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands: "{{ PreUpdateScript }}"
  - name: StopInstanceforKernelUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: stopped
  - name: StartInstanceforKernelUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: running
  - name: WaitUntilSsmAgentIsOnline1
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
      PropertySelector: "$.InstanceInformationList[0].PingStatus"
      DesiredValues:
        - Online
  - name: GetLinuxKernelInformationAfterUpdate
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
  - name: GetIxgbevfModuleInformation
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
          - "modinfo ixgbevf"
          - "ethtool -i eth0"
          - "exit 0"
  - name: RunIxgbevfScript
    action: "aws:runCommand"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands: "{{ IxgbevfScript }}"
  - name: StopInstanceforIxgbevfUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: stopped
  - name: CheckForSriovNetSupport
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstanceAttribute
      Attribute: sriovNetSupport
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: StatusForSriovNetSupport
        Selector: "$.SriovNetSupport.Value"
        Type: String
  - name: ChangeForSriovNetSupport
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: ModifyInstanceAttribute
      Attribute: sriovNetSupport
      Value: simple
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
  - name: CheckForSriovNetSupportAfterChange
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstanceAttribute
      Attribute: sriovNetSupport
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: StatusForSriovNetSupport
        Selector: "$.SriovNetSupport.Value"
        Type: String
  - name: StartInstanceforIxgbevfUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: running
  - name: WaitUntilSsmAgentIsOnline2
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
      PropertySelector: "$.InstanceInformationList[0].PingStatus"
      DesiredValues:
        - Online
  - name: GetIxgbevfModuleInformationAfterInstall
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
          - "modinfo ixgbevf"
          - "ethtool -i eth0"
          - "exit 0"
  - name: GetEnaModuleInformation
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
          - "modinfo ena"
          - "ethtool -i eth0"
          - "exit 0"
  - name: RunEnaScript
    action: "aws:runCommand"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands: "{{ EnaScript }}"
  - name: StopInstanceforEnaUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: stopped
  - name: CheckForEnaSupport
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstances
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: StatusForEnaSupport
        Selector: "$.Reservations[0].Instances[0].EnaSupport"
        Type: Boolean
  - name: ChangeForEnaSupport
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: ModifyInstanceAttribute
      Attribute: enaSupport
      Value: true
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
  - name: CheckForEnaSupportAfterChange
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstances
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: StatusForEnaSupport
        Selector: "$.Reservations[0].Instances[0].EnaSupport"
        Type: Boolean
  - name: CheckForInstanceType
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstances
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: InstanceType
        Selector: "$.Reservations[0].Instances[0].InstanceType"
        Type: String
  - name: ChangeForInstanceType
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: ModifyInstanceAttribute
      Attribute: instanceType
      Value: "{{ InstanceTypeForEnaSupport }}"
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
  - name: CheckForInstanceTypeAfterChange
    action: "aws:executeAwsApi"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      Service: ec2
      Api: DescribeInstances
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
    outputs:
      - Name: InstanceType
        Selector: "$.Reservations[0].Instances[0].InstanceType"
        Type: String
  - name: StartInstanceforEnaUpdate
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: running
  - name: WaitUntilSsmAgentIsOnline3
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 1800
    maxAttempts: 3
    onFailure: Abort
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      InstanceInformationFilterList:
        - key: InstanceIds
          valueSet:
            - "{{ LaunchInstance.InstanceIds }}"
      PropertySelector: "$.InstanceInformationList[0].PingStatus"
      DesiredValues:
        - Online
  - name: GetEnaModuleInformationAfterInstall
    action: "aws:runCommand"
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Abort
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands:
          - "#!/bin/bash"
          - ""
          - "uname -a"
          - "modinfo ena"
          - "ethtool -i eth0"
          - "exit 0"
  - name: RunPostUpdateScript
    action: "aws:runCommand"
    maxAttempts: 3
    onFailure: Abort
    timeoutSeconds: 1800
    inputs:
      DocumentName: "AWS-RunShellScript"
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      Parameters:
        commands: "{{ PostUpdateScript }}"
  - name: StopInstanceforCreateImage
    action: "aws:changeInstanceState"
    maxAttempts: 3
    timeoutSeconds: 3600
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      CheckStateOnly: false
      DesiredState: stopped
  - name: CreateImage
    action: "aws:createImage"
    maxAttempts: 3
    onFailure: Abort
    inputs:
      InstanceId: "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      ImageName: "{{ TargetAmiName }}"
      NoReboot: true
      ImageDescription: "AMI Generated by EC2 Automation on {{global:DATE_TIME}} from {{SourceAmiId}}"
  - name: TerminateInstance
    action: "aws:changeInstanceState"
    maxAttempts: 3
    onFailure: Abort
    inputs:
      InstanceIds:
        - "{{ DescribeManagedInstanceForInstanceId.InstanceId }}"
      DesiredState: terminated
outputs:
  - "CreateImage.ImageId"
